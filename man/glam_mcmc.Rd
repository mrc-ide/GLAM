% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/r6.R
\docType{class}
\name{glam_mcmc}
\alias{glam_mcmc}
\title{Initialize the object with haplotype‐time series data}
\format{
An \code{\link[R6]{R6Class}} generator object with methods:
}
\description{
Initialize the object with haplotype‐time series data

Initialize the object with haplotype‐time series data
}
\details{
GLAM MCMC Class

An R6 generator for running Markov Chain Monte Carlo (MCMC) in GLAM.
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-glam_mcmc-new}{\code{glam_mcmc$new()}}
\item \href{#method-glam_mcmc-init}{\code{glam_mcmc$init()}}
\item \href{#method-glam_mcmc-burn}{\code{glam_mcmc$burn()}}
\item \href{#method-glam_mcmc-sample}{\code{glam_mcmc$sample()}}
\item \href{#method-glam_mcmc-get_output_global}{\code{glam_mcmc$get_output_global()}}
\item \href{#method-glam_mcmc-get_output_n_infections}{\code{glam_mcmc$get_output_n_infections()}}
\item \href{#method-glam_mcmc-get_output_infection_times}{\code{glam_mcmc$get_output_infection_times()}}
\item \href{#method-glam_mcmc-print}{\code{glam_mcmc$print()}}
\item \href{#method-glam_mcmc-clone}{\code{glam_mcmc$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-glam_mcmc-new"></a>}}
\if{latex}{\out{\hypertarget{method-glam_mcmc-new}{}}}
\subsection{Method \code{new()}}{
Performs input validation on `df_data`.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{glam_mcmc$new(df_data, silent = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{df_data}}{A data.frame or tibble. Must contain the columns:
- `ind` (identifier for each sample/individual),
- `haplo` (haplotype label),
- `time` (observation time point),
- `positive` (binary indicator: 0 or 1).}

\item{\code{silent}}{Logical scalar. If `FALSE` (the default), informational
messages about loading progress and data summary are printed to the
console. If `TRUE`, message printing is suppressed.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly returns `NULL`. This is an R6 “initialize” method and
  is used for its side effects on the object’s private fields.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-glam_mcmc-init"></a>}}
\if{latex}{\out{\hypertarget{method-glam_mcmc-init}{}}}
\subsection{Method \code{init()}}{
Define model parameters.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{glam_mcmc$init(
  start_time,
  end_time,
  chains = 5,
  rungs = 1,
  max_infections = 5,
  lambda = NULL,
  theta = NULL,
  decay_rate = NULL,
  sens = NULL,
  n_infections = NULL,
  infection_times = NULL,
  haplo_freqs = NULL,
  w_list = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{start_time}}{TODO}

\item{\code{end_time}}{TODO}

\item{\code{chains}}{the number of independent chains.}

\item{\code{rungs}}{TODO}

\item{\code{max_infections}}{TODO}

\item{\code{lambda}}{TODO}

\item{\code{theta}}{TODO}

\item{\code{decay_rate}}{TODO}

\item{\code{sens}}{TODO}

\item{\code{n_infections}}{TODO}

\item{\code{infection_times}}{TODO}

\item{\code{haplo_freqs}}{TODO}

\item{\code{w_list}}{TODO}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-glam_mcmc-burn"></a>}}
\if{latex}{\out{\hypertarget{method-glam_mcmc-burn}{}}}
\subsection{Method \code{burn()}}{
Run burn-in MCMC
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{glam_mcmc$burn(iterations, target_acceptance = 0.44, silent = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{iterations}}{number of burn-in iterations.}

\item{\code{target_acceptance}}{all Metropolis-Hastings proposals will be
adaptively tuned to aim for this acceptance rate.}

\item{\code{silent}}{if \code{TRUE} then suppress all console output. Default =
\code{FALSE}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-glam_mcmc-sample"></a>}}
\if{latex}{\out{\hypertarget{method-glam_mcmc-sample}{}}}
\subsection{Method \code{sample()}}{
Run sampling MCMC
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{glam_mcmc$sample(iterations, silent = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{iterations}}{number of sampling iterations.}

\item{\code{silent}}{if \code{TRUE} then suppress all console output. Default =
\code{FALSE}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-glam_mcmc-get_output_global"></a>}}
\if{latex}{\out{\hypertarget{method-glam_mcmc-get_output_global}{}}}
\subsection{Method \code{get_output_global()}}{
Get global parameter output
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{glam_mcmc$get_output_global()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-glam_mcmc-get_output_n_infections"></a>}}
\if{latex}{\out{\hypertarget{method-glam_mcmc-get_output_n_infections}{}}}
\subsection{Method \code{get_output_n_infections()}}{
Get number of infections output.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{glam_mcmc$get_output_n_infections()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-glam_mcmc-get_output_infection_times"></a>}}
\if{latex}{\out{\hypertarget{method-glam_mcmc-get_output_infection_times}{}}}
\subsection{Method \code{get_output_infection_times()}}{
Get infection times output.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{glam_mcmc$get_output_infection_times()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-glam_mcmc-print"></a>}}
\if{latex}{\out{\hypertarget{method-glam_mcmc-print}{}}}
\subsection{Method \code{print()}}{
Print MCMC object summary
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{glam_mcmc$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-glam_mcmc-clone"></a>}}
\if{latex}{\out{\hypertarget{method-glam_mcmc-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{glam_mcmc$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
